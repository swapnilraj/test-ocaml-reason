(lang dune 1.8)
(name dune)
(library
 (name dune._caml)
 (kind normal)
 (synopsis "[Internal] Wrapped version of the OCaml stdlib")
 (archives (byte _caml/dune_caml.cma) (native _caml/dune_caml.cmxa))
 (plugins (byte _caml/dune_caml.cma) (native _caml/dune_caml.cmxs))
 (foreign_archives (native _caml/dune_caml.a))
 (requires dune._result)
 (main_module_name Dune_caml)
 (modes byte native)
 (modules
  (main_module_name Dune_caml)
  (modules ((name Dune_caml) (obj_name dune_caml) (visibility public) (impl)))
  (wrapped true)))
(library
 (name dune._result)
 (kind normal)
 (synopsis "[internal] Compatibility layer for the result type")
 (archives (byte _result/dune_result.cma) (native _result/dune_result.cmxa))
 (plugins (byte _result/dune_result.cma) (native _result/dune_result.cmxs))
 (foreign_archives (native _result/dune_result.a))
 (main_module_name Dune_result)
 (modes byte native)
 (modules
  (alias_module
   (name Dune_result__)
   (obj_name dune_result__)
   (visibility public)
   (impl))
  (main_module_name Dune_result)
  (modules
   ((name Dune_result) (obj_name dune_result) (visibility public) (impl))
   ((name Result)
    (obj_name dune_result__Result)
    (visibility public)
    (impl)
    (intf))
   ((name Result_compat)
    (obj_name dune_result__Result_compat)
    (visibility public)
    (impl)))
  (wrapped true)))
(library
 (name dune._dune_lang)
 (kind normal)
 (synopsis "[Internal] S-expression library")
 (archives (byte _dune_lang/dune_lang.cma) (native _dune_lang/dune_lang.cmxa))
 (plugins (byte _dune_lang/dune_lang.cma) (native _dune_lang/dune_lang.cmxs))
 (foreign_archives (native _dune_lang/dune_lang.a))
 (requires dune._stdune)
 (main_module_name Dune_lang)
 (modes byte native)
 (modules
  (alias_module
   (name Dune_lang__)
   (obj_name dune_lang__)
   (visibility public)
   (impl))
  (main_module_name Dune_lang)
  (modules
   ((name Atom) (obj_name dune_lang__Atom) (visibility public) (impl) (intf))
   ((name Dune_lang) (obj_name dune_lang) (visibility public) (impl) (intf))
   ((name Dune_lexer)
    (obj_name dune_lang__Dune_lexer)
    (visibility public)
    (impl)
    (intf))
   ((name Escape)
    (obj_name dune_lang__Escape)
    (visibility public)
    (impl)
    (intf))
   ((name Jbuild_lexer)
    (obj_name dune_lang__Jbuild_lexer)
    (visibility public)
    (impl)
    (intf))
   ((name Lexer)
    (obj_name dune_lang__Lexer)
    (visibility public)
    (impl)
    (intf))
   ((name Lexer_shared)
    (obj_name dune_lang__Lexer_shared)
    (visibility public)
    (impl)
    (intf))
   ((name Syntax)
    (obj_name dune_lang__Syntax)
    (visibility public)
    (impl)
    (intf))
   ((name Template)
    (obj_name dune_lang__Template)
    (visibility public)
    (impl)
    (intf))
   ((name Types) (obj_name dune_lang__Types) (visibility public) (impl)))
  (wrapped true)))
(library
 (name dune._stdune)
 (kind normal)
 (synopsis "[Internal] Standard library of Dune")
 (archives (byte _stdune/stdune.cma) (native _stdune/stdune.cmxa))
 (plugins (byte _stdune/stdune.cma) (native _stdune/stdune.cmxs))
 (foreign_archives (native _stdune/stdune.a))
 (requires dune._caml dune._result unix)
 (main_module_name Stdune)
 (modes byte native)
 (modules
  (alias_module
   (name Stdune__)
   (obj_name stdune__)
   (visibility public)
   (impl))
  (main_module_name Stdune)
  (modules
   ((name Ansi_color)
    (obj_name stdune__Ansi_color)
    (visibility public)
    (impl)
    (intf))
   ((name Array) (obj_name stdune__Array) (visibility public) (impl))
   ((name Bin) (obj_name stdune__Bin) (visibility public) (impl) (intf))
   ((name Bool) (obj_name stdune__Bool) (visibility public) (impl) (intf))
   ((name Bytes) (obj_name stdune__Bytes) (visibility public) (impl) (intf))
   ((name Char) (obj_name stdune__Char) (visibility public) (impl))
   ((name Common) (obj_name stdune__Common) (visibility public) (impl))
   ((name Comparable)
    (obj_name stdune__Comparable)
    (visibility public)
    (impl)
    (intf))
   ((name Digest) (obj_name stdune__Digest) (visibility public) (impl) (intf))
   ((name Dyn) (obj_name stdune__Dyn) (visibility public) (impl) (intf))
   ((name Dyn0) (obj_name stdune__Dyn0) (visibility public) (impl))
   ((name Either) (obj_name stdune__Either) (visibility public) (impl) (intf))
   ((name Env) (obj_name stdune__Env) (visibility public) (impl) (intf))
   ((name Escape) (obj_name stdune__Escape) (visibility public) (impl) (intf))
   ((name Exn) (obj_name stdune__Exn) (visibility public) (impl) (intf))
   ((name Fdecl) (obj_name stdune__Fdecl) (visibility public) (impl) (intf))
   ((name Filename)
    (obj_name stdune__Filename)
    (visibility public)
    (impl)
    (intf))
   ((name Float) (obj_name stdune__Float) (visibility public) (impl) (intf))
   ((name Fmt) (obj_name stdune__Fmt) (visibility public) (impl) (intf))
   ((name Fn) (obj_name stdune__Fn) (visibility public) (impl) (intf))
   ((name Hashable) (obj_name stdune__Hashable) (visibility public) (impl))
   ((name Hashtbl)
    (obj_name stdune__Hashtbl)
    (visibility public)
    (impl)
    (intf))
   ((name Hashtbl_intf)
    (obj_name stdune__Hashtbl_intf)
    (visibility public)
    (impl))
   ((name Id) (obj_name stdune__Id) (visibility public) (impl) (intf))
   ((name Import) (obj_name stdune__Import) (visibility public) (impl))
   ((name Int) (obj_name stdune__Int) (visibility public) (impl) (intf))
   ((name Interned)
    (obj_name stdune__Interned)
    (visibility public)
    (impl)
    (intf))
   ((name Io) (obj_name stdune__Io) (visibility public) (impl) (intf))
   ((name List) (obj_name stdune__List) (visibility public) (impl) (intf))
   ((name Loc) (obj_name stdune__Loc) (visibility public) (impl) (intf))
   ((name Loc0) (obj_name stdune__Loc0) (visibility public) (impl))
   ((name Map) (obj_name stdune__Map) (visibility public) (impl) (intf))
   ((name Map_intf) (obj_name stdune__Map_intf) (visibility public) (impl))
   ((name Monad) (obj_name stdune__Monad) (visibility public) (impl) (intf))
   ((name Nothing)
    (obj_name stdune__Nothing)
    (visibility public)
    (impl)
    (intf))
   ((name Option) (obj_name stdune__Option) (visibility public) (impl) (intf))
   ((name Or_exn) (obj_name stdune__Or_exn) (visibility public) (impl) (intf))
   ((name Ordering)
    (obj_name stdune__Ordering)
    (visibility public)
    (impl)
    (intf))
   ((name Path) (obj_name stdune__Path) (visibility public) (impl) (intf))
   ((name Pp) (obj_name stdune__Pp) (visibility public) (impl) (intf))
   ((name Proc) (obj_name stdune__Proc) (visibility public) (impl) (intf))
   ((name Result) (obj_name stdune__Result) (visibility public) (impl) (intf))
   ((name Set) (obj_name stdune__Set) (visibility public) (impl) (intf))
   ((name Set_intf) (obj_name stdune__Set_intf) (visibility public) (impl))
   ((name Sexp) (obj_name stdune__Sexp) (visibility public) (impl) (intf))
   ((name Sexp_intf) (obj_name stdune__Sexp_intf) (visibility public) (impl))
   ((name Staged) (obj_name stdune__Staged) (visibility public) (impl) (intf))
   ((name Stdune) (obj_name stdune) (visibility public) (impl))
   ((name String) (obj_name stdune__String) (visibility public) (impl) (intf))
   ((name String_split)
    (obj_name stdune__String_split)
    (visibility public)
    (impl)
    (intf))
   ((name Table) (obj_name stdune__Table) (visibility public) (impl) (intf))
   ((name Type_eq)
    (obj_name stdune__Type_eq)
    (visibility public)
    (impl)
    (intf))
   ((name Unit) (obj_name stdune__Unit) (visibility public) (impl) (intf))
   ((name Univ_map)
    (obj_name stdune__Univ_map)
    (visibility public)
    (impl)
    (intf)))
  (wrapped true)))
(library
 (name dune._ocaml_config)
 (kind normal)
 (synopsis "[Internal] Interpret the output of 'ocamlc -config'")
 (archives
  (byte _ocaml_config/ocaml_config.cma)
  (native _ocaml_config/ocaml_config.cmxa))
 (plugins
  (byte _ocaml_config/ocaml_config.cma)
  (native _ocaml_config/ocaml_config.cmxs))
 (foreign_archives (native _ocaml_config/ocaml_config.a))
 (requires dune._stdune)
 (main_module_name Ocaml_config)
 (modes byte native)
 (modules
  (main_module_name Ocaml_config)
  (modules
   ((name Ocaml_config)
    (obj_name ocaml_config)
    (visibility public)
    (impl)
    (intf)))
  (wrapped true)))
(library
 (name dune._wp)
 (kind normal)
 (virtual)
 (synopsis "[Internal] Standard library of Dune")
 (foreign_archives (native _wp/wp.a))
 (main_module_name Wp)
 (modes byte native)
 (modules
  (main_module_name Wp)
  (modules
   ((name Wp) (obj_name wp) (visibility public) (kind virtual) (intf)))
  (wrapped true)))
(library
 (name dune._wp.dune)
 (kind normal)
 (archives (byte _wp/dune/wp_dune.cma) (native _wp/dune/wp_dune.cmxa))
 (plugins (byte _wp/dune/wp_dune.cma) (native _wp/dune/wp_dune.cmxs))
 (foreign_archives (native _wp/dune/wp_dune.a))
 (requires dune._wp)
 (implements wp)
 (main_module_name Wp)
 (modes byte native)
 (modules
  (alias_module
   (name Wp__wp_dune__)
   (obj_name wp__wp_dune__)
   (visibility public)
   (impl))
  (main_module_name Wp)
  (modules ((name Wp) (obj_name wp) (visibility public) (impl)))
  (wrapped true)))
(library
 (name dune._wp.jbuilder)
 (kind normal)
 (archives
  (byte _wp/jbuilder/wp_jbuilder.cma)
  (native _wp/jbuilder/wp_jbuilder.cmxa))
 (plugins
  (byte _wp/jbuilder/wp_jbuilder.cma)
  (native _wp/jbuilder/wp_jbuilder.cmxs))
 (foreign_archives (native _wp/jbuilder/wp_jbuilder.a))
 (requires dune._wp)
 (implements wp)
 (main_module_name Wp)
 (modes byte native)
 (modules
  (alias_module
   (name Wp__wp_jbuilder__)
   (obj_name wp__wp_jbuilder__)
   (visibility public)
   (impl))
  (main_module_name Wp)
  (modules ((name Wp) (obj_name wp) (visibility public) (impl)))
  (wrapped true)))
(library
 (name dune.configurator)
 (kind normal)
 (archives
  (byte configurator/configurator.cma)
  (native configurator/configurator.cmxa))
 (plugins
  (byte configurator/configurator.cma)
  (native configurator/configurator.cmxs))
 (foreign_archives (native configurator/configurator.a))
 (requires
  dune._stdune
  dune._ocaml_config
  dune._dune_lang
  dune._caml
  dune._result)
 (main_module_name Configurator)
 (modes byte native)
 (modules
  (alias_module
   (name Configurator__)
   (obj_name configurator__)
   (visibility public)
   (impl))
  (main_module_name Configurator)
  (modules
   ((name Configurator) (obj_name configurator) (visibility public) (impl))
   ((name Extract_obj)
    (obj_name configurator__Extract_obj)
    (visibility public)
    (impl)
    (intf))
   ((name V1) (obj_name configurator__V1) (visibility public) (impl) (intf)))
  (wrapped true)))
